version: '3.8'

services:
  # Application service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: carrental-app
    ports:
      - "8083:8083"
    environment:
      - DATABASE_URL=jdbc:postgresql://db:5432/carrental_db
      - DATABASE_USERNAME=carrental
      - DATABASE_PASSWORD=secretpassword123
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=admin123
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - app_logs:/app/logs
    networks:
      - carrental-network
    restart: unless-stopped

  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: carrental-db
    environment:
      POSTGRES_USER: carrental
      POSTGRES_PASSWORD: secretpassword123
      POSTGRES_DB: carrental_db
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - carrental-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U carrental -d carrental_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis for caching (future use)
  redis:
    image: redis:7-alpine
    container_name: carrental-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - carrental-network
    command: redis-server --appendonly yes
    restart: unless-stopped

  # Prometheus for metrics (development monitoring)
  prometheus:
    image: prom/prometheus:latest
    container_name: carrental-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - carrental-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  app_logs:
    driver: local

networks:
  carrental-network:
    driver: bridge
